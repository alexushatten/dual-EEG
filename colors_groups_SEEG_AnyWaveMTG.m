function colors_groups_SEEG_AnyWaveMTG( Filename )
% colors_groups_SEEG_AnyWaveMTG: rewrite AnyWave montage (.mtg) file to
% group SEEG channels by electrodes using colors
%
% colors_groups_SEEG_AnyWaveMTG( Filename )
%
%  Inputs
% --------
% Filename: path to .mtg file (XML-like file generated by AnyWave)
%
%  Outputs
% ---------
% Rewritten .mtg AnyWave file, original is kept but with ".bkp" suffix (if
% it does not exist already, otherwise it will simply overwrite the
% original file)
%
%-------------------------------------------------------------------------
% http://meg.univ-amu.fr/wiki/AnyWave
%-------------------------------------------------------------------------
% Renaud Marquis @ FBMlab, February 2019
%-------------------------------------------------------------------------

Montage = parseAnyWaveMTG(Filename);
ChanName = Montage.ChanName;
ChanType = Montage.ChanType;
ChanRef = Montage.ChanRef;
ChanColor = Montage.ChanColor;
if isfield(Montage,'ChanFiltLP') && isfield(Montage,'ChanFiltHP')
    ChanFiltLP = Montage.ChanFiltLP;
    ChanFiltHP = Montage.ChanFiltHP;
else
    NoFiltersSet = true;
end

SEEGchans = find(~cellfun(@isempty,regexp(ChanType,'SEEG')));
[~,ElecMatch] = bipolar_montage(ChanName(SEEGchans));

% Dark and nice AnyWave colors:
AnyWaveColors = {'black'
'blueviolet'
'brown'
% 'cadetblue'
% 'chocolate'
% 'coral'
% 'cornflowerblue'
% 'crimson'
'darkblue'
% 'darkcyan'
% 'darkgoldenrod'
'darkgreen'
'olive'
'navy'
'darkmagenta'
'darkolivegreen'
'indigo'
% 'royalblue'
'saddlebrown'
'seagreen'
'sienna'
'darkorchid'
'olivedrab'
'darkred'
'darkslateblue'
'forestgreen'
'darkslategray'
% 'darkturquoise'
'darkviolet'
% 'deeppink'
% 'dodgerblue'
% 'firebrick'
% 'fuchsia'
'green'
% 'slateblue'
% 'steelblue'
'teal'
% 'tomato'
% 'limegreen'
% 'magenta'
'maroon'
% 'mediumblue'
% 'mediumorchid'
% 'mediumpurple'
% 'mediumseagreen'
% 'mediumslateblue'
% 'mediumvioletred'
'midnightblue'
% 'orangered'
'purple'};

AnyWaveColors = repmat(AnyWaveColors,ceil(max(ElecMatch)/length(AnyWaveColors)),1);
ChanColor(SEEGchans) = AnyWaveColors(ElecMatch);

% Backup original .mtg
if exist(spm_file(Filename,'suffix','.bkp'),'file')~=2
    copyfile(Filename,spm_file(Filename,'suffix','.bkp'));
end

Montage.ChanName = ChanName;
Montage.ChanType = ChanType;
Montage.ChanRef = ChanRef;
Montage.ChanColor = ChanColor;
if ~NoFiltersSet
    Montage.ChanFiltLP = ChanFiltLP;
    Montage.ChanFiltHP = ChanFiltHP;
end

writeAnyWaveMTG(Filename,Montage);

end

